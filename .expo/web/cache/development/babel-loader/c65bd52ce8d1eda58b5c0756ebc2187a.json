{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\adhit\\\\OneDrive\\\\Desktop\\\\book-santa-stage-11-master\\\\screens\\\\BookRequestScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport db from \"../config\";\nimport firebase from 'firebase';\nimport MyHeader from \"../components/MyHeader\";\nimport { BookSearch } from 'react-native-google-books';\nimport { SearchBar, ListItem } from 'react-native-elements';\n\nvar BookRequestScreen = function (_Component) {\n  _inherits(BookRequestScreen, _Component);\n\n  var _super = _createSuper(BookRequestScreen);\n\n  function BookRequestScreen() {\n    var _this;\n\n    _classCallCheck(this, BookRequestScreen);\n\n    _this = _super.call(this);\n\n    _this.addRequest = function _callee(bookName, reasonToRequest) {\n      var userId, randomRequestId, books;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userId = _this.state.userId;\n              randomRequestId = _this.createUniqueId();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(BookSearch.searchbook(bookName, 'AIzaSyASyOjOtJla-X-b3io2eLoaUc_bIRFSIIc'));\n\n            case 4:\n              books = _context.sent;\n              console.log(\"here in add request\");\n              db.collection('requested_books').add({\n                \"user_id\": userId,\n                \"book_name\": bookName,\n                \"reason_to_request\": reasonToRequest,\n                \"request_id\": randomRequestId,\n                \"book_status\": \"requested\",\n                \"date\": firebase.firestore.FieldValue.serverTimestamp(),\n                \"image_link\": books.data[0].volumeInfo.imageLinks.smallThumbnail\n              });\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(_this.getBookRequest());\n\n            case 9:\n              db.collection('users').where(\"email_id\", \"==\", userId).get().then().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  db.collection('users').doc(doc.id).update({\n                    IsBookRequestActive: true\n                  });\n                });\n              });\n\n              _this.setState({\n                bookName: '',\n                reasonToRequest: '',\n                requestId: randomRequestId\n              });\n\n              return _context.abrupt(\"return\", Alert.alert(\"Book Requested Successfully\"));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.receivedBooks = function (bookName) {\n      var userId = _this.state.userId;\n      var requestId = _this.state.requestId;\n      db.collection('received_books').add({\n        \"user_id\": userId,\n        \"book_name\": bookName,\n        \"request_id\": requestId,\n        \"bookStatus\": \"received\"\n      });\n    };\n\n    _this.getBookRequest = function () {\n      var bookRequest = db.collection('requested_books').where('user_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          if (doc.data().book_status !== \"received\") {\n            _this.setState({\n              requestId: doc.data().request_id,\n              requestedBookName: doc.data().book_name,\n              bookStatus: doc.data().book_status,\n              docId: doc.id\n            });\n          }\n        });\n      });\n    };\n\n    _this.sendNotification = function () {\n      db.collection('users').where('email_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var name = doc.data().first_name;\n          var lastName = doc.data().last_name;\n          db.collection('all_notifications').where('request_id', '==', _this.state.requestId).get().then(function (snapshot) {\n            snapshot.forEach(function (doc) {\n              var donorId = doc.data().donor_id;\n              var bookName = doc.data().book_name;\n              db.collection('all_notifications').add({\n                \"targeted_user_id\": donorId,\n                \"message\": name + \" \" + lastName + \" received the book \" + bookName,\n                \"notification_status\": \"unread\",\n                \"book_name\": bookName\n              });\n            });\n          });\n        });\n      });\n    };\n\n    _this.updateBookRequestStatus = function () {\n      db.collection('requested_books').doc(_this.state.docId).update({\n        book_status: 'received'\n      });\n      db.collection('users').where('email_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          db.collection('users').doc(doc.id).update({\n            IsBookRequestActive: false\n          });\n        });\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      console.log(\"image link \");\n      var obj = {\n        title: item.volumeInfo.title,\n        selfLink: item.selfLink,\n        buyLink: item.saleInfo.buyLink,\n        imageLink: item.volumeInfo.imageLinks\n      };\n      return React.createElement(TouchableHighlight, {\n        style: {\n          alignItems: \"center\",\n          backgroundColor: \"#DDDDDD\",\n          padding: 10,\n          width: '90%'\n        },\n        activeOpacity: 0.6,\n        underlayColor: \"#DDDDDD\",\n        onPress: function onPress() {\n          _this.setState({\n            showFlatlist: false,\n            bookName: item.volumeInfo.title\n          });\n        },\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 8\n        }\n      }, \" \", item.volumeInfo.title, \" \"));\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      bookName: \"\",\n      reasonToRequest: \"\",\n      IsBookRequestActive: \"\",\n      requestedBookName: \"\",\n      bookStatus: \"\",\n      requestId: \"\",\n      userDocId: '',\n      docId: '',\n      Imagelink: '',\n      dataSource: \"\",\n      showFlatlist: false\n    };\n    return _this;\n  }\n\n  _createClass(BookRequestScreen, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"getIsBookRequestActive\",\n    value: function getIsBookRequestActive() {\n      var _this2 = this;\n\n      db.collection('users').where('email_id', '==', this.state.userId).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this2.setState({\n            IsBookRequestActive: doc.data().IsBookRequestActive,\n            userDocId: doc.id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBookRequest();\n      this.getIsBookRequestActive();\n    }\n  }, {\n    key: \"getBooksFromApi\",\n    value: function getBooksFromApi(bookName) {\n      var books;\n      return _regeneratorRuntime.async(function getBooksFromApi$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.setState({\n                bookName: bookName\n              });\n\n              if (!(bookName.length > 2)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(BookSearch.searchbook(bookName, 'AIzaSyASyOjOtJla-X-b3io2eLoaUc_bIRFSIIc'));\n\n            case 4:\n              books = _context2.sent;\n              this.setState({\n                dataSource: books.data,\n                showFlatlist: true\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.IsBookRequestActive === true) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 11\n          }\n        }, \"Book Name\"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 11\n          }\n        }, this.state.requestedBookName)), React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 11\n          }\n        }, \" Book Status \"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 11\n          }\n        }, this.state.bookStatus)), React.createElement(TouchableOpacity, {\n          style: {\n            borderWidth: 1,\n            borderColor: 'orange',\n            backgroundColor: \"orange\",\n            width: 300,\n            alignSelf: 'center',\n            alignItems: 'center',\n            height: 30,\n            marginTop: 30\n          },\n          onPress: function onPress() {\n            _this3.sendNotification();\n\n            _this3.updateBookRequestStatus();\n\n            _this3.receivedBooks(_this3.state.requestedBookName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 11\n          }\n        }, \"I recieved the book \")));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 9\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Request Book\",\n          navigation: this.props.navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 11\n          }\n        }), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 11\n          }\n        }, React.createElement(TextInput, {\n          style: styles.formTextInput,\n          placeholder: \"enter book name\",\n          onChangeText: function onChangeText(text) {\n            return _this3.getBooksFromApi(text);\n          },\n          onClear: function onClear(text) {\n            return _this3.getBooksFromApi('');\n          },\n          value: this.state.bookName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 11\n          }\n        }), this.state.showFlatlist ? React.createElement(FlatList, {\n          data: this.state.dataSource,\n          renderItem: this.renderItem,\n          enableEmptySections: true,\n          style: {\n            marginTop: 10\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 12\n          }\n        }) : React.createElement(View, {\n          style: {\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 9\n          }\n        }, React.createElement(TextInput, {\n          style: [styles.formTextInput, {\n            height: 300\n          }],\n          multiline: true,\n          numberOfLines: 8,\n          placeholder: \"Why do you need the book\",\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              reasonToRequest: text\n            });\n          },\n          value: this.state.reasonToRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 9\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            _this3.addRequest(_this3.state.bookName, _this3.state.reasonToRequest);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 11\n          }\n        }, \"Request\")))));\n      }\n    }\n  }]);\n\n  return BookRequestScreen;\n}(Component);\n\nexport { BookRequestScreen as default };\nvar styles = StyleSheet.create({\n  keyBoardStyle: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  formTextInput: {\n    width: \"75%\",\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#ffab91',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  button: {\n    width: \"75%\",\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/adhit/OneDrive/Desktop/book-santa-stage-11-master/screens/BookRequestScreen.js"],"names":["React","Component","db","firebase","MyHeader","BookSearch","SearchBar","ListItem","BookRequestScreen","addRequest","bookName","reasonToRequest","userId","state","randomRequestId","createUniqueId","searchbook","books","console","log","collection","add","firestore","FieldValue","serverTimestamp","data","volumeInfo","imageLinks","smallThumbnail","getBookRequest","where","get","then","snapshot","forEach","doc","id","update","IsBookRequestActive","setState","requestId","Alert","alert","receivedBooks","bookRequest","book_status","request_id","requestedBookName","book_name","bookStatus","docId","sendNotification","name","first_name","lastName","last_name","donorId","donor_id","updateBookRequestStatus","renderItem","item","i","obj","title","selfLink","buyLink","saleInfo","imageLink","alignItems","backgroundColor","padding","width","showFlatlist","auth","currentUser","email","userDocId","Imagelink","dataSource","Math","random","toString","substring","onSnapshot","querySnapshot","getIsBookRequestActive","length","flex","justifyContent","borderColor","borderWidth","margin","alignSelf","height","marginTop","props","navigation","styles","formTextInput","text","getBooksFromApi","index","button","StyleSheet","create","keyBoardStyle","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  KeyboardAvoidingView,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  FlatList,\n  TouchableHighlight,\n  Alert,Image} from 'react-native';\nimport db from '../config';\nimport firebase from 'firebase';\nimport MyHeader from '../components/MyHeader'\nimport {BookSearch} from 'react-native-google-books';\nimport {SearchBar,ListItem} from 'react-native-elements'\n\nexport default class BookRequestScreen extends Component{\n  constructor(){\n    super();\n    this.state ={\n      userId : firebase.auth().currentUser.email,\n      bookName:\"\",\n      reasonToRequest:\"\",\n      IsBookRequestActive : \"\",\n      requestedBookName: \"\",\n      bookStatus:\"\",\n      requestId:\"\",\n      userDocId: '',\n      docId :'',\n      Imagelink: '',\n      dataSource:\"\",\n      showFlatlist: false\n    }\n  }\n\n  createUniqueId(){\n    return Math.random().toString(36).substring(7);\n  }\n\n\n\n  addRequest = async (bookName,reasonToRequest)=>{\n    var userId = this.state.userId\n    var randomRequestId = this.createUniqueId()\n    var books = await BookSearch.searchbook(bookName,'AIzaSyASyOjOtJla-X-b3io2eLoaUc_bIRFSIIc')\n    console.log(\"here in add request\");\n    db.collection('requested_books').add({\n        \"user_id\": userId,\n        \"book_name\":bookName,\n        \"reason_to_request\":reasonToRequest,\n        \"request_id\"  : randomRequestId,\n        \"book_status\" : \"requested\",\n         \"date\"       : firebase.firestore.FieldValue.serverTimestamp(),\n         \"image_link\" : books.data[0].volumeInfo.imageLinks.smallThumbnail\n\n    })\n\n    await  this.getBookRequest()\n    db.collection('users').where(\"email_id\",\"==\",userId).get()\n    .then()\n    .then((snapshot)=>{\n      snapshot.forEach((doc)=>{\n        db.collection('users').doc(doc.id).update({\n      IsBookRequestActive: true\n      })\n    })\n  })\n\n    this.setState({\n        bookName :'',\n        reasonToRequest : '',\n        requestId: randomRequestId\n    })\n\n    return Alert.alert(\"Book Requested Successfully\")\n\n\n  }\n\nreceivedBooks=(bookName)=>{\n  var userId = this.state.userId\n  var requestId = this.state.requestId\n  db.collection('received_books').add({\n      \"user_id\": userId,\n      \"book_name\":bookName,\n      \"request_id\"  : requestId,\n      \"bookStatus\"  : \"received\",\n\n  })\n}\n\n\n\n\ngetIsBookRequestActive(){\n  db.collection('users')\n  .where('email_id','==',this.state.userId)\n  .onSnapshot(querySnapshot => {\n    querySnapshot.forEach(doc => {\n      this.setState({\n        IsBookRequestActive:doc.data().IsBookRequestActive,\n        userDocId : doc.id\n      })\n    })\n  })\n}\n\n\n\n\n\n\n\n\n\n\ngetBookRequest =()=>{\n  // getting the requested book\nvar bookRequest=  db.collection('requested_books')\n  .where('user_id','==',this.state.userId)\n  .get()\n  .then((snapshot)=>{\n    snapshot.forEach((doc)=>{\n      if(doc.data().book_status !== \"received\"){\n        this.setState({\n          requestId : doc.data().request_id,\n          requestedBookName: doc.data().book_name,\n          bookStatus:doc.data().book_status,\n          docId     : doc.id\n        })\n      }\n    })\n})}\n\n\n\nsendNotification=()=>{\n  //to get the first name and last name\n  db.collection('users').where('email_id','==',this.state.userId).get()\n  .then((snapshot)=>{\n    snapshot.forEach((doc)=>{\n      var name = doc.data().first_name\n      var lastName = doc.data().last_name\n\n      // to get the donor id and book nam\n      db.collection('all_notifications').where('request_id','==',this.state.requestId).get()\n      .then((snapshot)=>{\n        snapshot.forEach((doc) => {\n          var donorId  = doc.data().donor_id\n          var bookName =  doc.data().book_name\n\n          //targert user id is the donor id to send notification to the user\n          db.collection('all_notifications').add({\n            \"targeted_user_id\" : donorId,\n            \"message\" : name +\" \" + lastName + \" received the book \" + bookName ,\n            \"notification_status\" : \"unread\",\n            \"book_name\" : bookName\n          })\n        })\n      })\n    })\n  })\n}\n\ncomponentDidMount(){\n  this.getBookRequest()\n  this.getIsBookRequestActive()\n\n\n}\n\nupdateBookRequestStatus=()=>{\n  //updating the book status after receiving the book\n  db.collection('requested_books').doc(this.state.docId)\n  .update({\n    book_status : 'received'\n  })\n\n  //getting the  doc id to update the users doc\n  db.collection('users').where('email_id','==',this.state.userId).get()\n  .then((snapshot)=>{\n    snapshot.forEach((doc) => {\n      //updating the doc\n      db.collection('users').doc(doc.id).update({\n        IsBookRequestActive: false\n      })\n    })\n  })\n}\n\nasync getBooksFromApi (bookName){\n  this.setState({bookName:bookName})\n    if (bookName.length >2){\n\n    var books = await BookSearch.searchbook(bookName,'AIzaSyASyOjOtJla-X-b3io2eLoaUc_bIRFSIIc')\n    this.setState({\n      dataSource:books.data,\n      showFlatlist:true\n    })\n\n  // console.log(\"here is the book data volume \" ,books.data[0].volumeInfo.title);\n  // console.log(\"here is the book data volume \" ,books.data[1].volumeInfo.title);\n  // console.log(\"here is the book data volume \" ,books.data[2].volumeInfo.title);\n  // console.log(\"here is the book data volume \" ,books.data[3].volumeInfo.title);\n  // console.log(\"here is the book data volume \" ,books.data[4].volumeInfo.title);\n  // console.log(\"this is the self link \",books.data[0].selfLink);\n  // console.log(\"thhis is the sale\",books.data[0].saleInfo.buyLink);\n  // this.setState({Imagelink:books.data[0].volumeInfo.imageLinks.smallThumbnail})\n}\n  }\n\n\n//render Items  functionto render the books from api\n renderItem = ( {item, i} ) =>{\n   console.log(\"image link \");\n\n  let obj ={\n    title:item.volumeInfo.title,\n    selfLink: item.selfLink,\n    buyLink: item.saleInfo.buyLink,\n    imageLink:item.volumeInfo.imageLinks\n  }\n\n\n   return (\n     <TouchableHighlight\n     style={{ alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10,\n\n    width: '90%',\n    }}\n      activeOpacity={0.6}\n      underlayColor=\"#DDDDDD\"\n      onPress={()=>{\n        this.setState({\n          showFlatlist:false,\n          bookName:item.volumeInfo.title,\n\n        })}\n    }\n      bottomDivider\n      >\n       <Text> {item.volumeInfo.title} </Text>\n\n     </TouchableHighlight>\n\n\n   )\n }\n\n  render(){\n\n    if(this.state.IsBookRequestActive === true){\n      return(\n\n        // Status screen\n\n        <View style = {{flex:1,justifyContent:'center'}}>\n          <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\n          <Text>Book Name</Text>\n          <Text>{this.state.requestedBookName}</Text>\n          </View>\n          <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\n          <Text> Book Status </Text>\n\n          <Text>{this.state.bookStatus}</Text>\n          </View>\n\n          <TouchableOpacity style={{borderWidth:1,borderColor:'orange',backgroundColor:\"orange\",width:300,alignSelf:'center',alignItems:'center',height:30,marginTop:30}}\n          onPress={()=>{\n            this.sendNotification()\n            this.updateBookRequestStatus();\n            this.receivedBooks(this.state.requestedBookName)\n          }}>\n          <Text>I recieved the book </Text>\n          </TouchableOpacity>\n        </View>\n      )\n    }\n    else\n    {\n    return(\n      // Form screen\n        <View style={{flex:1}}>\n          <MyHeader title=\"Request Book\" navigation ={this.props.navigation}/>\n\n          <View>\n\n          <TextInput\n            style ={styles.formTextInput}\n            placeholder={\"enter book name\"}\n            onChangeText={text => this.getBooksFromApi(text)}\n            onClear={text => this.getBooksFromApi('')}\n            value={this.state.bookName}\n          />\n\n      {  this.state.showFlatlist ?\n\n        (  <FlatList\n        data={this.state.dataSource}\n        renderItem={this.renderItem}\n        enableEmptySections={true}\n        style={{ marginTop: 10 }}\n        keyExtractor={(item, index) => index.toString()}\n      /> )\n      :(\n        <View style={{alignItems:'center'}}>\n        <TextInput\n          style ={[styles.formTextInput,{height:300}]}\n          multiline\n          numberOfLines ={8}\n          placeholder={\"Why do you need the book\"}\n          onChangeText ={(text)=>{\n              this.setState({\n                  reasonToRequest:text\n              })\n          }}\n          value ={this.state.reasonToRequest}\n        />\n        <TouchableOpacity\n          style={styles.button}\n          onPress={()=>{ this.addRequest(this.state.bookName,this.state.reasonToRequest);\n          }}\n          >\n          <Text>Request</Text>\n        </TouchableOpacity>\n        </View>\n      )\n    }\n            </View>\n        </View>\n    )\n  }\n}\n}\n\nconst styles = StyleSheet.create({\n  keyBoardStyle : {\n    flex:1,\n    alignItems:'center',\n    justifyContent:'center'\n  },\n  formTextInput:{\n    width:\"75%\",\n    height:35,\n    alignSelf:'center',\n    borderColor:'#ffab91',\n    borderRadius:10,\n    borderWidth:1,\n    marginTop:20,\n    padding:10,\n  },\n  button:{\n    width:\"75%\",\n    height:50,\n    justifyContent:'center',\n    alignItems:'center',\n    borderRadius:10,\n    backgroundColor:\"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n       width: 0,\n       height: 8,\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop:20\n    },\n  }\n)"]},"metadata":{},"sourceType":"module"}